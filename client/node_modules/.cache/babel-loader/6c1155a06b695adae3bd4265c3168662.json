{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nasim\\\\Documents\\\\Hackathon\\\\plant-saviour\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nasim\\\\Documents\\\\Hackathon\\\\plant-saviour\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nasim\\\\Documents\\\\Hackathon\\\\plant-saviour\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nasim\\\\Documents\\\\Hackathon\\\\plant-saviour\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nasim\\\\Documents\\\\Hackathon\\\\plant-saviour\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nasim\\\\Documents\\\\Hackathon\\\\plant-saviour\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: cards,\n      clickedArray: [],\n      topScore: 0,\n      score: 0,\n      message: \"\",\n      shakeit: \"false\"\n    };\n\n    _this.clickPicture = function (id) {\n      // Arrange the pictures in a random manner\n      var shuffledArray = _this.shuffleArray(cards);\n\n      _this.setState({\n        cards: shuffledArray\n      }); // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\n\n\n      if (_this.state.clickedArray.includes(id)) {\n        _this.setState({\n          score: 0,\n          clickedArray: [],\n          message: \"Incorrect!! Game Over ☹️ Click an image to start again!\",\n          shakeit: \"true\"\n        });\n      } else {\n        _this.setState({\n          clickedArray: _this.state.clickedArray.concat([id]),\n          score: _this.state.score + 1,\n          message: \"Correct!! 🙂\",\n          shakeit: \"false\"\n        });\n      } // set topscore = score if score>topscore.\n\n\n      if (_this.state.score > _this.state.topScore) {\n        _this.setState({\n          topScore: _this.state.score\n        });\n      } // shake the wrapper if shakeit is set to true\n\n    };\n\n    _this.shuffleArray = function (picturesArray) {\n      for (var i = picturesArray.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [picturesArray[j], picturesArray[i]];\n        picturesArray[i] = _ref[0];\n        picturesArray[j] = _ref[1];\n      }\n\n      return picturesArray;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Welcome to Plant Saviour App!\")), React.createElement(\"h3\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Click on an image to earn points, but don't click on any, more than once!\"), React.createElement(\"p\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Score: \", this.state.score, \" | TopScore: \", this.state.topScore)), React.createElement(\"p\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.message))), React.createElement(Wrapper, {\n        shakeWrapper: this.state.shakeit,\n        pictures: this.state.cards.map(function (picture) {\n          return React.createElement(PictureCard, {\n            clickPicture: _this2.clickPicture,\n            id: picture.id,\n            key: picture.id // to get rid of unique key prop warning\n            ,\n            name: picture.name,\n            image: picture.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Copyright \\xA9 | \", React.createElement(\"a\", {\n        href: \"https://github.com/NasimFekrat/clicky-game\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"GitHub Repo!\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\nasim\\Documents\\Hackathon\\plant-saviour\\client\\src\\App.js"],"names":["React","Component","PictureCard","Wrapper","cards","App","state","clickedArray","topScore","score","message","shakeit","clickPicture","id","shuffledArray","shuffleArray","setState","includes","concat","picturesArray","i","length","j","Math","floor","random","logo","map","picture","name","image","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    clickedArray: [],\n    topScore: 0,\n    score: 0,\n    message: \"\",\n    shakeit: \"false\"\n  };\n  clickPicture = id => {\n    // Arrange the pictures in a random manner\n    const shuffledArray = this.shuffleArray(cards);\n    this.setState({ cards: shuffledArray });\n    // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\n    if (this.state.clickedArray.includes(id)) {\n      this.setState({ score: 0, clickedArray: [], message: \"Incorrect!! Game Over ☹️ Click an image to start again!\", shakeit: \"true\" });\n    }\n    else {\n      this.setState({\n        clickedArray: this.state.clickedArray.concat([id]),\n        score: this.state.score + 1,\n        message: \"Correct!! 🙂\",\n        shakeit: \"false\"\n      });\n    }\n    // set topscore = score if score>topscore.\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n    // shake the wrapper if shakeit is set to true\n  }\n  shuffleArray = (picturesArray) => {\n    for (let i = picturesArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [picturesArray[i], picturesArray[j]] = [picturesArray[j], picturesArray[i]];\n    }\n    return picturesArray;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to Plant Saviour App!</h1>\n        </header>\n        <h3 className=\"App-intro\">\n          <strong>Click on an image to earn points, but don't click on any, more than once!</strong>\n          <p className=\"score\"><strong>Score: {this.state.score} | TopScore: {this.state.topScore}</strong></p>\n          <p className=\"message\"><strong>{this.state.message}</strong></p>\n        </h3>\n        <Wrapper\n          shakeWrapper={this.state.shakeit}\n          pictures=\n          {this.state.cards.map(picture => (\n            <PictureCard\n              clickPicture={this.clickPicture}\n              id={picture.id}\n              key={picture.id} // to get rid of unique key prop warning\n              name={picture.name}\n              image={picture.image}\n            />\n          ))}\n        />\n        <footer className=\"footer\">\n          <div className=\"container\">\n            <span className=\"text-muted\">Copyright &copy; | <a href=\"https://github.com/NasimFekrat/clicky-game\" onClick={this.handleClick}>GitHub Repo!</a></span>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}